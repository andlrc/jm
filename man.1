.TH json_merger 1
.SH "NAME"
json_merger \- Merge JSON files based on indicators

.SH "SYNOPSIS"
json_merger [OPTION]... [file]...

.SH "DESCRIPTION"
json_merger is a way to merge JSON files based on indicators such as
\fB@extends\fR, \fB@match\fR, \fB@override\fR and \fB@delete\fR.

.IP "\fB-p\fR, \fB--pretty\fR" 4
Prettify, indent the output JSON in a human way.

.IP "\fB-s\fR, \fB--suffix\fR" 4
Output suffix. Suffix added to input files to construct output files.  If left
blank then \fBstdout\fR is used.

.IP "\fB-v\fR, \fB--variable\fR" 4
Set \fBkey=value\fR variables. See \fBPATH TEMPLATING\fB.

.IP "\fB-h\fR, \fB--help\fR" 4
Show help and exit.

.IP "\fB-V\fR, \fB--version\fR" 4
Print version information.

.SH "INDICATORS"
.IP "\fB@extends\fR" 4
An array or string of path names to files which should be extended.

.IP "\fB@override\fR" 4
An array, string or \fBtrue\fR indicating that the given property will be
overridden.  \fBMATCH SYNTAX\fR is supported.  See \fB@delete\fR

.IP "\fB@delete\fR" 4
An array, string or \fBtrue\fR indicating that the given property will be
deleted.  When used with \fBtrue\fR the whole node will be overridden. When
used with an array only the listed properties will be overridden.  \fBMATCH
SYNTAX\fR is supported.

\fB@delete\fR will always delete the listed nodes, while ignoring all regular
properties, while \fB@override\fR will empty the listed nodes, and merge ontop
of that, this will also leave an empty object.

.IP "\fB@append\fR, \fB@prepend\fR, \fB@insert\fR" 4
When working with arrays the default behaviour will be to merge on indexes, i.e.
first item in the arrays will be merged together.

Using \fB@append\fR one can force the node to be appended at the end of the
destination array.

Using \fB@prepend\fR one can force the node to be prepended at the beginning
of the destination array.  Note that \fB@prepend\fR will insert at index 0, 1, 2
accordantly to make the JSON represent the sequence of which the nodes are
inserted.

Using \fB@insert\fR one can specify the index at which the node should be
inserted.

.IP "\fB@match\fR" 4
Match can be used to match a given item in an array.  See "MATCH SYNTAX" for
more information.

.IP "\fB@move\fR" 4
This indicator is the same as \fB@insert\fR, but is used together with
\fB@match\fR.

.IP "\fB@value\fR" 4
Used together with the \fB@insert\fR family of indicators, to insert a primitive
value at a specific location.  See EXAMPLES for an example.

.IP "\fB@comment\fR" 4
These will be removed in the final output file, and is intended to be used for
internal comments.

.IP "\fB@id\fR" 4
Global ID's that can be matched with \fB@match\fR.

.SH "PATH TEMPLATING"
Paths specified in \fB@extends\fR can be templated using the following syntax:
\fB$variable\fR and \fB${variable}\fR.

See the following example:

\&    $ cat a.json
.br
\&    { "@extends": ["${my_var}.json"], "a": 1 }
.br
\&    $ cat b.json
.br
\&    { "b": 1 }
.br
\&    $ json_merger -v my_var=b a.json
.br
\&    { "b": 1, "a": 1 }

.SH "MATCH SYNTAX"
.IP "\fBProperty\fR" 4
Match a property with a primitive value, the syntax is:

\&    [property]
.br
\&    [property=value]
.br
\&    [property='value']
.br
\&    ['property'='value']
.br
\&    [@SPECIAL=value]

If single quotes is used a string will be matches.  Note that a string will
still be checked even when they are omitted.

The list of \fB@SPECIAL\fR are:

\fB@value\fR use to match primitives in arrays.
.br
\fB@id\fR use to match specified ID's.  See \fBINDICATORS\fR.

.IP "\fBID\fR" 4
Match an ID specified with \fB@id\fR.  The syntax is:

\&    #id

See \fBINDICATORS\fR.

.IP "\fBDirectory\fR" 4
Match a property name and ascend into that matches node, the syntax is:

\&    name/

.SH "EXAMPLES"
.IP "\fB@extends\fR" 4
To extend the files \fBc.json\fR and then \fBb.json\fR one could write:

\&    {
.br
\&      "@extends": ["b.json", "c.json"]
.br
\&    }

This will take \fBb.json\fR as the base file.  Then apply \fBc.json\fR on top.
And finally apply the initial file on top of that output.

If \fBb.json\fR or \fBc.json\fR contains \fR@extends\fR indicators these will be
resolved beforehand.

.IP "\fB@override\fR" 4
Having \fBb.json\fR as:

\&    {
.br
\&      "prop1": { "b": 1 }
.br
\&    }

One can override \fBprop1\fR with:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "prop1": { "@override": true, "a": 1 }
.br
\&    }

The same can be archived using:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "@override": ["prop1"],
.br
\&      "prop1": { "a": 1 }
.br
\&    }

.IP "\fB@insert\fR" 4
Having \fBb.json\fR as:

\&    {
.br
\&      "arr": ["A", "B", "C"]
.br
\&    }

One can insert an object between \fBA\fR and \fBB\fR with:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "arr": [ { "@insert": 1, "a": 1 } ]
.br
\&    }

The same applies for \fB@append\fR and \fB@prepend\fR.

If one wants to insert a primitive value, or an array, one can use
\fB@value\fR.  Taking the example from above:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "arr": [ { "@insert": 1, "@value": "A2" }
.br
\&    }

.IP "\fBMatch Property\fR" 4
Having \fBb.json\fR as:

\&    {
.br
\&      "arr": [
.br
\&        { "a": 1 },
.br
\&        { "a": 2 },
.br
\&        { "a": 3 }
.br
\&    }

One can match the second element \fB{ "a": 2 }\fR with:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "arr": [ { "@match": "[a=2]" } ]
.br
\&    }

.IP "\fBMatch Directory\fR" 4
Having \fBb.json\fR as:

\&    {
.br
\&      "a": {
.br
\&        "b": {
.br
\&          "c": 1
.br
\&        }
.br
\&      }
.br
\&    }

One can match the the path object containing \fBc = 1\fR with:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "@match": "a/b/[c=1]"
.br
\&    }

.IP "\fBMatch @value\fR" 4
Having \fBb.json\fR as:

\&    {
.br
\&      "arr": [ "A", "B", "C" ]
.br
\&    }

One can match and delete the \fBB\fR with:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "arr": [ { "@delete": true, "@match": "[@value=B]" } ]
.br
\&    }

.IP "\fBMatch @id\fR" 4
Having \fBb.json\fR as:
\&    {
.br
\&      "a": { "@id": "a" },
.br
\&      "b": { "@id": "b" }
.br
\&    }

One can match and delete the \fBa\fR with:

\&    {
.br
\&      "@extends": ["b.json"],
.br
\&      "@match": "#a",
.br
\&      "@delete": true
.br
\&    }


.SH "EXIT STATUS"
The following exit values shall be returned:

.IP "\fB0\fR" 4
Successful completion.

.IP "\fB>0\fR" 4
An error occurred.
